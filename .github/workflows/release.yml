name: Build and Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:

  winbuild:
    name: Windows Build and Upload
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x'
    - name: Restore dependencies
      run: dotnet restore
    - name: Build x64
      run: dotnet publish -c release -r win-x64
    - name: Build x86
      run: dotnet publish -c release -r win-x86  
      
    - name: Zip x64
      run: 7z a Collector-Win64.zip ./Collector/bin/Release/netcoreapp3.1/win-x64/publish/Collector.exe
    - name: Zip x86
      run: 7z a Collector-Win86.zip ./Collector/bin/Release/netcoreapp3.1/win-x86/publish/Collector.exe
      
    - name: Save Winx64 Zip
      uses: actions/upload-artifact@v2
      with:
        path: Collector-Win64.zip

    - name: Save Winx86 Zip
      uses: actions/upload-artifact@v2
      with:
        path: Collector-Win86.zip
      
            
  linuxbuild:
    name: Linux Build and Upload
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x'
    - name: Restore dependencies
      run: dotnet restore
    - name: Build Linux x64
      run: dotnet publish -c release -r linux-x64
    
    - name: Zip Linux Bin
      run: 7z a Collector-Linux64.zip ./Collector/bin/Release/netcoreapp3.1/linux-x64/publish/Collector
      
    - name: Save Linux64 Zip
      uses: actions/upload-artifact@v2
      with:
        path: Collector-Linux64.zip
        
        
  osxbuild:
    name: OSX Build and Upload
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x'
    - name: Restore dependencies
      run: dotnet restore
    - name: Build OSX x64
      run: dotnet publish -c release -r osx-x64
    
    - name: Zip OSX Bin
      run: 7z a Collector-Osx64.zip ./Collector/bin/Release/netcoreapp3.1/osx-x64/publish/Collector
      
    - name: Save OSX Zip
      uses: actions/upload-artifact@v2
      with:
        path: Collector-Osx64.zip        

  githubrelease:
    name: Create Github Release from Builds
    runs-on: ubuntu-latest
    needs: [linuxbuild, winbuild, osxbuild]
    
    steps:  
    - name: Stage Build Files
      uses: actions/download-artifact@master
      with:
        path: .
      
    - name: Upload Release Assets
      id: upload-release-asset 
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        fail_on_unmatched_files: true
        generate_release_notes: true
        files: |
            /home/runner/work/Collector/Collector/artifact/Collector-Win64.zip
            /home/runner/work/Collector/Collector/artifact/Collector-Win86.zip
            /home/runner/work/Collector/Collector/artifact/Collector-Linux64.zip
            /home/runner/work/Collector/Collector/artifact/Collector-Osx64.zip